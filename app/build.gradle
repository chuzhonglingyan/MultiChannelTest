apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def verCode = 1

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.yuntian.multichanneltest"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode verCode
        versionName APP_VERSION
        resValue("string", 'app_version', APP_VERSION)

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        aaptOptions.cruncherEnabled = false
        aaptOptions.useNewCruncher = false
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_KEY_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_STORE_PASSWORD
        }
        debug {
            storeFile file("debug.keystore")
            keyAlias "AndroidDebugKey"
            keyPassword "android"
            storePassword "android"
        }
    }

    buildTypes {
        release {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG

            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //启用混淆代码的功能
            minifyEnabled true
            //压缩对齐生成的apk包
            zipAlignEnabled true
            //指定混淆规则，需要压缩优化的混淆要把proguard-android.txt换成proguard-android.txt
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true
            signingConfig signingConfigs.release //打包命令行：gradlew assembleRelease
        }

        debug {
            buildConfigField 'String', 'API_SERVER_URL', INSIDE_TEST_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', INSIDE_TEST_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', INSIDE_TEST_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', INSIDE_TEST_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", INSIDE_TEST_LEO_DEBUG

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
        //关闭预编译
        preDexLibraries = true
    }


    // 如果嫌上面写法麻烦,也可以这样简写,加上一个批量处理即可.
    productFlavors {
        commonsoon{}
        zhushou91{}
        market360{}
        xiaomi{}
        wandoujia{}
        yingyonghui{}
        jifengmarket{}
        mumayi{}
        yingyongbao{}
        huaweimrket{}
        anzhimarket{}
    }
    //批量处理
    productFlavors.all {
        flavor ->
            def channel = name.startsWith("_") ? name.substring(1) : name
            flavor.manifestPlaceholders = [MTA_CHANNEL_VALUE: channel]
    }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName
            def timeNow
            def oldFile = output.outputFile
            def outDirectory = oldFile.parent

            if ("true".equals(IS_JENKINS)) {
                timeNow = BUILD_TIME
                outDirectory = 'F:/IT/java/apache-tomcat-8.0.41/webapps/jenkins/app'
                newName = 'mct-android-v' +
                        APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
            } else {
                timeNow = getDate()
                if (variant.buildType.name.equals('debug')) {
                    newName = "mct-android-v${APP_VERSION}-debug.apk"
                } else {
                    newName = 'mct-android-v' +
                            APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
                }
            }

            output.outputFile = new File(outDirectory, newName)

        }
    }

    apply from: 'productFlavors.gradle'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    testCompile 'junit:junit:4.12'
}
